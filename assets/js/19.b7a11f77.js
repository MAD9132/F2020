(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{474:function(e,t,a){"use strict";a.r(t);var s=a(54),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"assignment-1-guessing-game-created-using-kotlin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assignment-1-guessing-game-created-using-kotlin"}},[e._v("#")]),e._v(" Assignment 1 - Guessing Game created using Kotlin:")]),e._v(" "),a("p",[a("a",{attrs:{href:"~@root/KotlinGuessingGameStarterProject.zip"}},[e._v("KotlinGuessingGameStarterProject.zip")])]),e._v(" "),a("p",[e._v("Using Kotlin create a new console application titled "),a("code",[e._v("Guessing Game")]),e._v(". The application you create will be a number guessing game similar to the one you created last semester in MAD9021.")]),e._v(" "),a("p",[e._v("The game will generate a random number then the user will attempt to guess the random number. With each guess an appropriate type of integer variable will increment by one, this variable will keep track of the number of guesses. The user will be receiving guidance from the program in the form of text statements indicating if the guess is too high or too low. Once the number has been guessed the program will display a congratulations message and display the number of guesses used then return to a main menu or quit based the user’s choice.")]),e._v(" "),a("p",[e._v("The main menu will be presented before the start of each game. The user will select from 3 possible number guessing games and will also have the option to quit. The menu should look something like this:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Super Number Guessing Game Deluxe")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("Please Choose:")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("1: Easy Guess a number between 1 and 20")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("1: Normal Guess a number between 1 and 100")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("1: Hard Guess a number between 1 and 1000")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[e._v("0: Exit")])])])]),e._v(" "),a("p",[a("strong",[e._v("Note")]),e._v(': Use a RAW String to create this menu (""" """)')]),e._v(" "),a("h2",{attrs:{id:"inheritance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inheritance"}},[e._v("#")]),e._v(" Inheritance")]),e._v(" "),a("p",[e._v("You will use the provided RandomNumber class as the superclass for your project:")]),e._v(" "),a("p",[a("a",{attrs:{href:"~@root/RandomNumber.kt.txt"}},[e._v("RandomNumber.kt.txt")])]),e._v(" "),a("p",[a("strong",[e._v("Note")]),e._v(": You will need to make sure that the package name matches your project")]),e._v(" "),a("p",[e._v("Then create a new subclass that inherits from the RandomNumber class and name it RangedRandomNumber.")]),e._v(" "),a("h2",{attrs:{id:"the-subclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-subclass"}},[e._v("#")]),e._v(" The subclass:")]),e._v(" "),a("p",[e._v("Add two new Integer properties to the subclass class:")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("minimum")]),e._v(": this field represents the lowest number the random object should create")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("maximum")]),e._v(": this field represents the highest number the random object should create")])])]),e._v(" "),a("p",[e._v("The primary constructor will have integer arguments for both the minimum and maximum values.")]),e._v(" "),a("p",[e._v("Add "),a("strong",[e._v("set methods")]),e._v(" for minimum and maximum that "),a("strong",[e._v("validate")]),e._v(" the passed argument making sure they are in the correct range for the Random object (minimum should be zero or above, maximum should be one or above) and the type of Integer container you are using to store the value.")]),e._v(" "),a("p",[e._v("All validation errors must throw an exception with an appropriate error message.")]),e._v(" "),a("p",[e._v("Add an additional error message which provides a more detailed description on the error if an exception is thrown during validation.")]),e._v(" "),a("p",[e._v("Make sure these set methods are called when an instance of this class is created.")]),e._v(" "),a("p",[e._v("The superclass should be created in such a way that it cannot be inherited by another class (hint: remember this is Kotlin not Java).")]),e._v(" "),a("p",[e._v("Override the GenerateRandomNumber method in the superclass so that it generates a random number in the required range for your Game using the minimum and maximum fields you added.")]),e._v(" "),a("h2",{attrs:{id:"program-code-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#program-code-structure"}},[e._v("#")]),e._v(" Program Code Structure:")]),e._v(" "),a("p",[e._v("You will add a new class to a newly created Kotlin console application project. The new project should be named "),a("code",[e._v("Guessing Game")]),e._v(" and the new class should be named "),a("code",[e._v("Game")]),e._v(".")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Game")]),e._v(" class will contain the following "),a("strong",[e._v("properties")]),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("A "),a("code",[e._v("public Integer")]),e._v(" that is to be used to keep track of the total number of guesses a player makes in a single game.")]),e._v(" "),a("li",[e._v("A "),a("code",[e._v("private Derived Random object (subclass)")]),e._v(" that will be used to generate the random number to be guessed.")]),e._v(" "),a("li",[e._v("A "),a("code",[e._v("private nullable String")]),e._v(" that will be used to capture player input.\n"),a("ul",[a("li",[e._v("Only this String is to be used for player input inside the Game class.")])])])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Game")]),e._v(" class will contain the following "),a("strong",[e._v("methods")]),e._v(" and "),a("strong",[e._v("variables")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("An Integer to count the number of guesses which should be initialized to zero.")])]),e._v(" "),a("li",[a("p",[e._v("A "),a("code",[e._v("nullable")]),e._v(" "),a("code",[e._v("String")]),e._v(" used for input which should be initialized to empty.")])]),e._v(" "),a("li",[a("p",[e._v("A "),a("code",[e._v("RangedRandomNumber")]),e._v(" object to be used to generate (pseudo) random numbers.")])]),e._v(" "),a("li",[a("p",[e._v("A "),a("code",[e._v("public")]),e._v(" Display Menu method:")]),e._v(" "),a("ul",[a("li",[e._v("This method has no arguments and returns a Short.")]),e._v(" "),a("li",[e._v("This method displays the games main menu, captures the players menu choice and validates it:")]),e._v(" "),a("li",[e._v("First this method displays the main menu. The user will enter an integer value between 0 and 3. The users input must be a valid number in the required range, if not it will loop until a valid number is provided. This method will only return once a valid choice is made.")]),e._v(" "),a("li",[e._v("This method will use a try catch structure to make sure that the input is in the correct format.\n"),a("ul",[a("li",[e._v("The catch structure will use a when statement that will check for a "),a("code",[e._v("NumberFormatException")]),e._v(", an "),a("code",[e._v("ArithmeticException")]),e._v(" and then use the "),a("code",[e._v("else option")]),e._v(" to display the "),a("code",[e._v("exception message")]),e._v(" if the event was not caused by these two identified exceptions.")])])]),e._v(" "),a("li",[e._v("Once a valid choice is made this method will return by calling the Game Setup method described below and pass the player choice as an argument.")])])]),e._v(" "),a("li",[a("p",[e._v("A private Game Setup method:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("This method has one argument, a short  and returns a short")])]),e._v(" "),a("li",[e._v("This method will Setup the Game by deciding what range of random number is to be generated based on the player choice.")])])]),e._v(" "),a("li",[a("p",[e._v("Internally a when statement will be used to examine all four possible cases (0 – 3).")])]),e._v(" "),a("li",[a("p",[e._v("If the player choice is zero this method will simply return that zero value.")])]),e._v(" "),a("li",[a("p",[e._v("The other three possible values will generate a random number using the following range values:\n1: Generate a random number between 1 – 20\n2: Generate a random number between 1 - 100\n3: Generate a random number between 1 - 1000")])]),e._v(" "),a("li",[a("p",[e._v("The method will then return the random number that is generated")])]),e._v(" "),a("li",[a("p",[e._v("A "),a("code",[e._v("public")]),e._v(" "),a("code",[e._v("Play Game")]),e._v(" method:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("This method has one argument, an Integer and has no return value")])]),e._v(" "),a("li",[e._v("This method contains the actual game play, the number guessing game.")]),e._v(" "),a("li",[e._v("The argument contains the number to be guessed.")]),e._v(" "),a("li",[e._v("All game play takes place inside this method. The player will provide a guess and the game will give feedback, based on if the guess is too high or too low or correct.")]),e._v(" "),a("li",[e._v("This method will use a "),a("code",[e._v("try catch structure")]),e._v(" to make sure that the input is in the correct format.\n"),a("ul",[a("li",[e._v("The catch structure will use a when statement that will check for a "),a("code",[e._v("NumberFormatException")]),e._v(", an "),a("code",[e._v("ArithmeticException")]),e._v(" and then use the else option to display the "),a("code",[e._v("exception message")]),e._v(" if the event was not caused by these two identified exceptions.")])])])])]),e._v(" "),a("li",[a("p",[e._v("With every guess the data member that contains the total number of guesses made will be incremented.")])]),e._v(" "),a("li",[a("p",[e._v("Once the correct guess is made this data member will contain the total number of guesses made in the current game.")])]),e._v(" "),a("li",[a("p",[e._v("Once the correct guess is made the method will return.")])])]),e._v(" "),a("p",[e._v("You will need to create all the required code and logic to perform this required functionality.")]),e._v(" "),a("h2",{attrs:{id:"the-main-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-main-function"}},[e._v("#")]),e._v(" The "),a("code",[e._v("main")]),e._v(" function:")]),e._v(" "),a("p",[e._v("First create a new instance (object) of your "),a("code",[e._v("Game")]),e._v(" class.")]),e._v(" "),a("p",[e._v("Then create a "),a("code",[e._v("local nullable String")]),e._v(" that is to be used just for player input. This is for use in the "),a("code",[e._v("Main function")]),e._v(" only. The "),a("code",[e._v("Game class")]),e._v(" has a property that is to be used for input inside the Game class only.")]),e._v(" "),a("p",[e._v("Next the programs main function will use a "),a("code",[e._v("do while loop")]),e._v(" to control the flow of the game. This loop will exit if the user enters either a lowercase or an uppercase "),a("code",[e._v("n")]),e._v(". "),a("strong",[e._v("Any")]),e._v(" other character will cause the loop to execute over again.")]),e._v(" "),a("p",[e._v("Inside main, the do while loop will first call the game object method that displays the menu (as described above).")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Display Menu")]),e._v(" method displays the main menu.")]),e._v(" "),a("p",[e._v("The player will enter an integer value between 0 and 3. The users input must be a valid number in the required range, if not it will loop until a valid number is provided. The method will only return once a valid choice is made.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Display Menu")]),e._v(" method must the return the players choice (0 – 3) to another game object method: "),a("code",[e._v("Game Setup")]),e._v(".")]),e._v(" "),a("p",[e._v("Also note: This method must use a raw String to display the actual menu")]),e._v(" "),a("p",[e._v("If a zero is returned from this method the program must exit the do while loop then, display an exit message then immediately terminate.")]),e._v(" "),a("p",[e._v("If the return value is not zero then the program will call the game object method that plays the game, passing the generated random number (the number the player needs to guess).")]),e._v(" "),a("p",[e._v("Once this method has returned the player has successfully guessed the random number.")]),e._v(" "),a("p",[e._v("At this point (the end of each game) a congratulations message will be displayed (from the Main method) and the total number of guesses will be shown to the player along with a message that asks if the user wants to play again. The message should accept a lowercase and uppercase “n” as no (which means the game will immediately exit), or any other key to play again. If playing again the guess counter must be set back to zero before each game.")]),e._v(" "),a("h3",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[e._v("#")]),e._v(" NOTES:")]),e._v(" "),a("p",[e._v("Use Kotlin ranges in condition statements that are checking for a value that is in a specific range.")]),e._v(" "),a("p",[e._v("Do not bypass null checking when using readLine() for input (don't use "),a("code",[e._v("!!")]),e._v(") use "),a("code",[e._v("?:")]),e._v(" and convert using "),a("code",[e._v("toTypeOrNull()")]),e._v(" (Type will be "),a("code",[e._v("Int")]),e._v(", "),a("code",[e._v("Short")]),e._v(" etc.)")]),e._v(" "),a("p",[e._v("Make sure you comment your code (program flow, variables, constructors, all aspects of inheritance etc. , explain with comments why the superclass and one of its methods are declared as "),a("code",[e._v("open")]),e._v(" ).")]),e._v(" "),a("p",[e._v("Put your name and the date at the top of ALL source code files including the superclass.")]),e._v(" "),a("p",[e._v("Use code regions for the properties and all three methods in the Game class.")]),e._v(" "),a("p",[e._v("Use two code regions , one for the properties and one for the methods in the subclass.")]),e._v(" "),a("p",[e._v('Make sure you use appropriate data types (i.e. what kind of integer is needed for the value I am storing) also make sure that all properties, methods and local variables have appropriate and descriptive names, that you use Kotlin type inference whenever possible (do not use type inference if you get an "initializer is redundant" warning) and, when possible, that all built in types are initialized when they are created.')]),e._v(" "),a("p",[a("strong",[e._v("NOTE")]),e._v(": An example of this assignment will be shown during class.")]),e._v(" "),a("h2",{attrs:{id:"submission"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[e._v("#")]),e._v(" Submission")]),e._v(" "),a("p",[e._v('Submit your assignment as a complete project (containing all source code and support files) that is packaged as zip file that is created in IntelliJ IDE using the "Export to Zip File" menu item under the File menu options.')]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[a("strong",[e._v("NOTE")]),e._v(": Make sure you add your first and last name to your submitted zip file:")]),e._v(" "),a("p",[e._v("example:  Pat_Student_KotlinGameAssignment.zip")])])])}),[],!1,null,null,null);t.default=n.exports}}]);