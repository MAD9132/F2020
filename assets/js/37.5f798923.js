(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{490:function(e,t,a){"use strict";a.r(t);var s=a(54),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"week-9-hybrid-activity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#week-9-hybrid-activity"}},[e._v("#")]),e._v(" Week 9 Hybrid Activity")]),e._v(" "),a("p",[e._v("Work on your Android assignment:")]),e._v(" "),a("p",[e._v("Add and implement gesture and double tap listener support:")]),e._v(" "),a("p",[e._v("You must add and implement both the GestureDetector "),a("code",[e._v("onGestureListener")]),e._v(" and "),a("code",[e._v("onDoubleTapListener")]),e._v(" interfaces to your "),a("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),a("p",[e._v("All the abstract methods from these interfaces must be implemented and all but the onShowPress and onLongPress should return true.")]),e._v(" "),a("blockquote",[a("p",[e._v("Note: "),a("code",[e._v("onShowPress")]),e._v(" and "),a("code",[e._v("onLongPress")]),e._v(" return "),a("code",[e._v("Unit")])])]),e._v(" "),a("p",[e._v("Create a nullable "),a("code",[e._v("GestureDetectorCompat")]),e._v(" instance property in the "),a("code",[e._v("MainActivity")]),e._v(" class and initialize it to null.")]),e._v(" "),a("p",[e._v("In the MainActivity class "),a("code",[e._v("onCreate")]),e._v(" method initialize the "),a("code",[e._v("GestureDetectorCompat")]),e._v(" instance property passing this for both the context and the listener parameters.")]),e._v(" "),a("p",[e._v("Then pass this to the "),a("code",[e._v("GestureDetectorCompat")]),e._v(" instance property's "),a("code",[e._v("setOnDoubleTapListener")]),e._v(" method.")]),e._v(" "),a("p",[e._v("You must now override the "),a("code",[e._v("onTouchEvent")]),e._v(" method in the "),a("code",[e._v("MainActivity")]),e._v(" class and set the "),a("code",[e._v("GestureDetectorCompat")]),e._v(" instance to handle the onTouchEvent and then pass the event to the superclass implementation of "),a("code",[e._v("onTouchEvent")])]),e._v(" "),a("p",[e._v("Test your gesture code by outputting each event using "),a("code",[e._v("Toast.makeText")]),e._v(" method using the "),a("code",[e._v("LENGTH_SHORT")]),e._v(" duration option.")]),e._v(" "),a("p",[e._v("Once you know your gesture code is working correctly remove all the "),a("code",[e._v("Toast.makeText")]),e._v(" method calls from your gesture methods.")]),e._v(" "),a("p",[e._v("Then remove the getImage button from the UI and remove the getImage button "),a("code",[e._v("setOnClickListener")]),e._v(" method from the onCreate method in the "),a("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),a("p",[e._v("Then add the call to "),a("code",[e._v("glideImage.loadGlideImage")]),e._v(" to the "),a("code",[e._v("onFling")]),e._v(" method override in the "),a("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),a("p",[e._v("Test and verify that images are now loaded by using a "),a("code",[e._v("Fling")]),e._v(" gesture.")]),e._v(" "),a("p",[e._v("Add an extension method to the Context class to your "),a("code",[e._v("MainActivity")]),e._v(" and "),a("code",[e._v("GlideImage")]),e._v(" classes :")]),e._v(" "),a("p",[e._v("This method should have a single "),a("code",[e._v("String")]),e._v(" parameter named "),a("code",[e._v("message")]),e._v(". This "),a("code",[e._v("String")]),e._v(" will be used as message parameter for a "),a("code",[e._v("Toast.makeText")]),e._v(" method using the "),a("code",[e._v("LENGTH_SHORT")]),e._v(" duration option.")]),e._v(" "),a("p",[e._v("The method should be used like this:")]),e._v(" "),a("div",{staticClass:"language-kt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kt"}},[a("code",[e._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("toast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"message text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"add-an-application-subclass-called-theapp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-an-application-subclass-called-theapp"}},[e._v("#")]),e._v(" Add an Application subclass called TheApp:")]),e._v(" "),a("p",[e._v("This class will inherit from the Application class.")]),e._v(" "),a("p",[e._v("It will contain an unnamed companion object that will contain a single property:")]),e._v(" "),a("p",[e._v("a var of the type "),a("code",[e._v("Context")]),e._v(" called "),a("code",[e._v("context")]),e._v(" which will use lateinit and have an empty private set method to make this property read only.")]),e._v(" "),a("p",[e._v("The class will override the onCreate method. This method should first call the superclass implementation of "),a("code",[e._v("onCreate")]),e._v(" and the initialize the context property which was declared in the companion object to the applicationContext.")]),e._v(" "),a("p",[e._v("In order to use this class globally in your application you need to open the "),a("code",[e._v("AndroidManifest.xml")]),e._v(" file for your project and add a name attribute that contains the fully qualified name of this class to the application tag:")]),e._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[e._v('<application\n    android:name="your.project.package.name.goes.here.TheApp"\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Add an extension method to the Context class to both your "),a("code",[e._v("MainActivity")]),e._v(" and "),a("code",[e._v("GlideImage")]),e._v(" classes :")]),e._v(" "),a("p",[e._v("This method should have a single String parameter named message. This String will be used as message parameter for a "),a("code",[e._v("Toast.makeText")]),e._v(" method using the "),a("code",[e._v("LENGTH_SHORT")]),e._v(" duration option.")]),e._v(" "),a("p",[e._v("The method should be used like this:")]),e._v(" "),a("div",{staticClass:"language-kt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kt"}},[a("code",[e._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("toast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"message text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);