(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{475:function(e,t,s){"use strict";s.r(t);var a=s(54),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"assignment-3-random-web-image-app-deluxe-version-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assignment-3-random-web-image-app-deluxe-version-2"}},[e._v("#")]),e._v(" Assignment 3 - Random Web Image App Deluxe (version 2)")]),e._v(" "),s("p",[e._v("In this assignment you will add a series of new features to the Random Web Image Android App you created during the last assignment.")]),e._v(" "),s("p",[e._v("New App/Code Features:")]),e._v(" "),s("ul",[s("li",[e._v("ProgressBar Control")]),e._v(" "),s("li",[e._v("Listener for image downloads")]),e._v(" "),s("li",[e._v("An Internet Connectivity class with App termination")]),e._v(" "),s("li",[e._v("A global Application Class used to get Context")]),e._v(" "),s("li",[e._v("Toast messages")]),e._v(" "),s("li",[e._v("Extension function for Toast output")]),e._v(" "),s("li",[e._v("Saving data to Shared Preferences")]),e._v(" "),s("li",[e._v("Full screen support")]),e._v(" "),s("li",[e._v("Gestures")]),e._v(" "),s("li",[e._v("Double Tap support")]),e._v(" "),s("li",[e._v("At least 10 more image URL's of which at least 3 provide a random image")])]),e._v(" "),s("p",[e._v("The App will be built/modified during class and students will complete required components as instructed.")]),e._v(" "),s("p",[e._v("Add 10 new URLs as described below:")]),e._v(" "),s("p",[e._v("You need to find a minimum of 10 more image URL's that will be added to the stored list in your current Android assignment.")]),e._v(" "),s("p",[e._v("You must find, test and then save URLs for use in your App.")]),e._v(" "),s("p",[s("strong",[e._v("NOTE")]),e._v(": ALL URL's must use HTTPS (secure addresses)")]),e._v(" "),s("p",[e._v("At least 3 of the URLs must access Placeholder image generator sights that provide actual photos, for example unsplash.com.")]),e._v(" "),s("p",[e._v("At least 3 of the URLs must provide a random image (not the same image every time)")]),e._v(" "),s("p",[e._v("All your existing and new URL's that support image dimensions in the URL should have a width and height added, for example:")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://picsum.photos/800/600",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://picsum.photos/800/600"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("The rest of the images can be URLs to photos from the web that you would like to use in your app.")]),e._v(" "),s("p",[s("strong",[e._v("NOTE")]),e._v(": ALL of your image URL's must use HTTPS addresses and ALL (at least 20) of them must work when your App is running on Android.")]),e._v(" "),s("p",[e._v("Add and implement gesture and double tap listener support:")]),e._v(" "),s("p",[e._v("You must add and implement both the "),s("code",[e._v("GestureDetector")]),e._v(" "),s("code",[e._v("onGestureListener")]),e._v(" and "),s("code",[e._v("onDoubleTapListener")]),e._v(" interfaces to your "),s("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),s("p",[e._v("All the abstract methods from these interfaces must be implemented and all but the "),s("code",[e._v("onShowPress")]),e._v(" and "),s("code",[e._v("onLongPress")]),e._v(" should return true.")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(": onShowPress and onLongPress return Unit")]),e._v(" "),s("p",[e._v("Create a "),s("code",[e._v("nullable GestureDetectorCompat")]),e._v(" instance property in the "),s("code",[e._v("MainActivity class")]),e._v(" and initialize it to "),s("code",[e._v("null")]),e._v(".")]),e._v(" "),s("p",[e._v("In the "),s("code",[e._v("MainActivity class onCreate")]),e._v(" method initialize the "),s("code",[e._v("GestureDetectorCompat")]),e._v(" instance property passing this for both the context and the listener parameters.")]),e._v(" "),s("p",[e._v("Then pass this to the "),s("code",[e._v("GestureDetectorCompat")]),e._v(" instance property's "),s("code",[e._v("setOnDoubleTapListener")]),e._v(" method.")]),e._v(" "),s("p",[e._v("You must now override the "),s("code",[e._v("onTouchEvent")]),e._v(" method in the "),s("code",[e._v("MainActivity")]),e._v(" class and set the "),s("code",[e._v("GestureDetectorCompat")]),e._v(" instance to handle the "),s("code",[e._v("onTouchEvent")]),e._v(" and then pass the event to the superclass implementation of "),s("code",[e._v("onTouchEvent")])]),e._v(" "),s("p",[e._v("Test your gesture code by outputting each event using "),s("code",[e._v("Toast.makeText")]),e._v(" method using the "),s("code",[e._v("LENGTH_SHORT")]),e._v(" duration option.")]),e._v(" "),s("p",[e._v("Once you know your gesture code is working correctly remove all the "),s("code",[e._v("Toast.makeText")]),e._v(" method calls from your gesture methods.")]),e._v(" "),s("p",[e._v("Then remove the getImage button from the UI and remove the getImage button "),s("code",[e._v("setOnClickListener")]),e._v(" method from the "),s("code",[e._v("onCreate")]),e._v(" method in the "),s("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),s("p",[e._v("Then add the call to "),s("code",[e._v("glideImage.loadGlideImage")]),e._v(" to the "),s("code",[e._v("onFling")]),e._v(" method override in the "),s("code",[e._v("MainActivity")]),e._v(" class.")]),e._v(" "),s("p",[e._v("Test and verify that images are now loaded by using a "),s("code",[e._v("Fling")]),e._v(" gesture.")]),e._v(" "),s("p",[e._v("Add an extension method to the Context class to both your "),s("code",[e._v("MainActivity")]),e._v(" and "),s("code",[e._v("GlideImage")]),e._v(" classes :")]),e._v(" "),s("p",[e._v("This method should have a single "),s("code",[e._v("String")]),e._v(" parameter named "),s("code",[e._v("message")]),e._v(". This "),s("code",[e._v("String")]),e._v(" will be used as "),s("code",[e._v("message")]),e._v(" parameter for a "),s("code",[e._v("Toast.makeText")]),e._v(" method using the "),s("code",[e._v("LENGTH_SHORT")]),e._v(" duration option.")]),e._v(" "),s("p",[e._v("The method should be used like this:")]),e._v(" "),s("div",{staticClass:"language-kt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kt"}},[s("code",[e._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("toast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"message text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Add an "),s("code",[e._v("Application subclass")]),e._v(" called "),s("code",[e._v("TheApp")]),e._v(":")]),e._v(" "),s("p",[e._v("This class will inherit from the "),s("code",[e._v("Application")]),e._v(" class.")]),e._v(" "),s("p",[e._v("It will contain an unnamed companion object that will contain a single property:")]),e._v(" "),s("p",[e._v("A "),s("code",[e._v("var")]),e._v(" of the type "),s("code",[e._v("Context")]),e._v(" called "),s("code",[e._v("context")]),e._v(" which will use "),s("code",[e._v("lateinit")]),e._v(" and have an empty "),s("code",[e._v("private set method")]),e._v(" to make this property read only.")]),e._v(" "),s("p",[e._v("The class will override the "),s("code",[e._v("onCreate")]),e._v(" method. This method should first call the superclass implementation of onCreate and the initialize the context property which was declared in the companion object to the applicationContext.")]),e._v(" "),s("p",[e._v("In order to use this class globally in your application you need to open the "),s("code",[e._v("AndroidManifest.xml")]),e._v(" file for your project and add a name attribute that contains the fully qualified name of this class to the application tag:")]),e._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[e._v('<application\nandroid:name="your.project.package.name.goes.here.TheApp"\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("h2",{attrs:{id:"add-shared-preferences"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-shared-preferences"}},[e._v("#")]),e._v(" Add Shared Preferences:")]),e._v(" "),s("p",[e._v("Create a new "),s("code",[e._v("Kotlin")]),e._v(" class in your project called "),s("code",[e._v("SharedPreferences")]),e._v(".")]),e._v(" "),s("p",[e._v("Add the provided code to this class:")]),e._v(" "),s("p",[s("a",{attrs:{href:"~@root/SharedPreferences.txt"}},[e._v("Shared Preferences Sample Class")])]),e._v(" "),s("p",[e._v("Add all the required Set and Get methods to this class:")]),e._v(" "),s("p",[e._v("add "),s("code",[e._v("get")]),e._v(" methods for "),s("code",[e._v("Int?")]),e._v(", "),s("code",[e._v("Long?")]),e._v(", "),s("code",[e._v("Float?")]),e._v(", "),s("code",[e._v("Boolean?")]),e._v(" and "),s("code",[e._v("Set<String>?")]),e._v("\nadd "),s("code",[e._v("set")]),e._v(" methods for "),s("code",[e._v("Int")]),e._v(", "),s("code",[e._v("Long")]),e._v(", "),s("code",[e._v("Float")]),e._v(", "),s("code",[e._v("Boolean")]),e._v(" and "),s("code",[e._v("Set<String>")]),e._v("\nAdd a new property to the "),s("code",[e._v("GlideImage")]),e._v(" class called "),s("code",[e._v("sharedPreferences")]),e._v(" and initialize it to a instance of your completed "),s("code",[e._v("SharedPreferences")]),e._v(" class.")]),e._v(" "),s("p",[e._v("Inside the "),s("code",[e._v("onResourceReady")]),e._v(" fun in your "),s("code",[e._v("GlideImage")]),e._v(" class after "),s("code",[e._v("lastURL")]),e._v(" has been set to last URL used save "),s("code",[e._v("lastURL")]),e._v(" to shared preferences using your "),s("code",[e._v("sharedPreferences")]),e._v(" object.")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(': Your key name should be "LAST_URL"')]),e._v(" "),s("p",[e._v("In the "),s("code",[e._v("MainActivity")]),e._v(" class "),s("code",[e._v("onCreate")]),e._v(" method create an instance of your completed "),s("code",[e._v("SharedPreferences")]),e._v(" class called "),s("code",[e._v("sharedPreferences")]),e._v(".")]),e._v(" "),s("p",[e._v("Create a new "),s("code",[e._v("nullable String")]),e._v(" local variable called "),s("code",[e._v("lastURL")]),e._v(".")]),e._v(" "),s("p",[e._v("Initialize this var using your "),s("code",[e._v("sharedPreferences")]),e._v(" object's "),s("code",[e._v("getValueString")]),e._v(" method passing "),s("code",[e._v("LAST_URL")]),e._v(" as the key.")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(": Your "),s("code",[e._v("nullable String")]),e._v(" variable (lastURL) will now contain either "),s("code",[e._v("null")]),e._v(" or the address of the last URL used in your app.")]),e._v(" "),s("h2",{attrs:{id:"add-full-screen-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-full-screen-support"}},[e._v("#")]),e._v(" Add Full Screen support:")]),e._v(" "),s("p",[e._v("Add the provided "),s("code",[e._v("showSystemUI")]),e._v(" and "),s("code",[e._v("hideSystemUI")]),e._v(" methods to the "),s("code",[e._v("MainActivity")]),e._v(" class:")]),e._v(" "),s("p",[s("a",{attrs:{href:"~@root/FullScreenSampleCode.txt"}},[e._v("Full Screen Sample Code")])]),e._v(" "),s("p",[e._v("Use the Double Tap event listener to toggle between full and regular screen mode.")]),e._v(" "),s("p",[e._v("Note: The user of your app may switch out of full screen mode without using a double tap (swipe down).")]),e._v(" "),s("p",[e._v("To deal with this issue you should add a listener for in the onCreate method in the MainActivity class and detect the current state:")]),e._v(" "),s("div",{staticClass:"language-kt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-kt"}},[s("code",[e._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("decorView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("setOnSystemUiVisibilityChangeListener")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" visibility "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("->")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// set a systemUIVisibilty state property here")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// normal view is (visibility and View.SYSTEM_UI_FLAG_FULLSCREEN == 0)")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h3",{attrs:{id:"convert-to-use-lateinit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#convert-to-use-lateinit"}},[e._v("#")]),e._v(" Convert to use lateinit:")]),e._v(" "),s("p",[e._v("Convert the nullable GestureDetectorCompat instance property in the "),s("code",[e._v("MainActivity")]),e._v(" class to use lateinit (no longer a nullable type) then remove both unnecessary safe calls (?) used with the this property.")]),e._v(" "),s("h3",{attrs:{id:"code-comments-and-regions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-comments-and-regions"}},[e._v("#")]),e._v(" Code comments and regions:")]),e._v(" "),s("p",[e._v("Add your full name and the date at the top of the "),s("code",[e._v("MainActivity")]),e._v(" and all other Kotlin source code files you have added to the project.")]),e._v(" "),s("p",[e._v("Add separate code regions in the "),s("code",[e._v("MainActivity")]),e._v(" and all other Kotlin source code files you have added to the project for Properties and methods. Also add code regions for large areas of code such as the gestures code in MainActivity.")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(": A demo of the completed App will be shown in class")]),e._v(" "),s("h2",{attrs:{id:"submission"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[e._v("#")]),e._v(" Submission")]),e._v(" "),s("p",[e._v("Submit your assignment as a complete project (containing all source code and support files) that is packaged as zip file that is created in Android Studio using the "),s("code",[e._v("Export to Zip File")]),e._v(" menu item under the File menu options.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[s("strong",[e._v("NOTE")]),e._v(": Make sure you add your first and last name to your submitted zip file:")]),e._v(" "),s("p",[e._v("example: Pat_Student_AndroidAssignment.zip")])])])}),[],!1,null,null,null);t.default=o.exports}}]);